\documentclass[a4paper, 12pt, onecolumn]{article}
\usepackage{multirow, amsmath, natbib, graphicx, xfrac, amssymb}
\usepackage[colorlinks=false, pdfborder={0 0 0}]{hyperref}
\usepackage[margin=2.5cm]{geometry}

\newcommand{\ft}{\frac{1}{2}}
\newcommand{\bm}[1]{\ifmmode \text{\boldmath$#1$} \else {\boldmath$#1$}\fi}
\newcommand{\Lik}{\relax \ifmmode {\mathcal{L}} \else {$\mathcal{L}$} \fi}
\newcommand{\LikX}[1]{\relax \ifmmode {\mathcal{L(\text{#1})}} \else {$\mathcal{L}$(#1)} \fi}
\renewcommand{\thesubsection}{\arabic{subsection}}
\setlength{\parskip}{1em}

\begin{document}
\SweaveOpts{concordance=TRUE}
% \VignetteIndexEntry{sequoia example}
% \VignetteKeyword{pedigree}


\title{sequoia}
\author{Jisca Huisman \\ jisca.huisman@gmail.com}
\date{\today}


\maketitle

\verb+Sequoia+ provides a method to reconstruct multi-generational pedigrees based on SNP data, as described in the manuscript ``Pedigree reconstruction using SNP data: parentage assignment, sibship clustering, and beyond''. The bulk of the algorithm is written in Fortran, to minimise computation times. An example R script is given below, followed by detailed description of each step.

\subsection*{Example}
An example pedigree and associated life history file are provided with the package, which can be used to try out the steps detailed in this vignette. This pedigree consists of 5 generations with interconnected half-sib clusters (Pedigree II in the manuscript).
\small{
<<eval=FALSE, echo=TRUE>>=
install.packages("sequoia")  # only required first time
setwd("E:/Sequoia/test")     # set the working directory
library(sequoia)             # load the package
#
# copy the example pedigree and associated life history file to the working
# directory.
file.copy(system.file("Ped_HSg5.txt", package="sequoia"), getwd())
file.copy(system.file("LH_HSg5.txt", package="sequoia"), getwd())
#
# simulate genotype data for 200 SNPs, and use otherwise default values
SimGeno(PedFile = "Ped_HSg5.txt", nSnp = 200)
#
# run the preparation step, duplicate checking and parentage assignment
sequoia(GenoFile = "SimGeno.txt", LifeHistFile = "LH_HSg5.txt", Sibships = FALSE)
#
# compare the assigned parents to those in the true pedigree
PedCompare(PedIN = "Ped_HSg5.txt", PedOUT = "Parents_assigned.txt")
#
# run sibship clustering
sequoia(Prep = FALSE, CheckDup = FALSE, Parentage = FALSE, Sibships = TRUE)
#
# compare the assigned real and dummy parents to the true pedigree
PedCompare(PedIN = "Ped_HSg5.txt", PedOUT = "PedSeq.txt")
@
}
%but not yet the slower sibship clustering. Iterate as necessary,
% weeding out duplicated and erroneous samples (using PLINK's toolkit),
% and adding estimated birth years to the life history file.

\subsection{Input}
Two files are required as input. The first contains the SNP data, with one line per individual, and one column for IDs followed by one column per SNP, where each SNP is coded as 0, 1, 2 copies of the reference allele, or missing (-9). This file format can for example be obtained using PLINK \citep{Purcell07} in combination with \verb+sequoia+'s `Prep' step, as described below.

The other file contains three columns: individual ID, sex (1 = female, 2 = male, other numbers = unknown), and birth year. Ideally all genotyped individuals are included in this life history file with sex and (estimated) birth year information, but this is not necessary. The life history file may include many more individuals than the genotype file, or in a different order. In species with more than one generations per year, a finer time scale than year of birth ought to be used, ensuring that parents are never born within the same time unit as their putative offspring.

\begin{figure}[tb]
	\centering
	\includegraphics[width=.7\textwidth]{programOverview}
	\caption{\footnotesize Overview of the input files required and output files generated by the various sub-programs of Sequoia. `CheckDup', `Parentage' and `Sibship' each require a genotype file (Genotypes.txt), a lifehistory file (Lifehistories.txt), the age-difference based prior probabilities (AgePriors.txt) and the parameter values for the run (SequoiaSpecs.txt), symbolised by the grey incoming arrows.}
	\label{fig:Overview}
\end{figure}

\paragraph{Selection of SNP markers}
Using tens of thousands of SNP markers for pedigree reconstruction is unnecessary, will slow down computation, and may even hamper inferences by their non-independence. Rather, a subset of SNPs in low linkage disequilibrium (LD) with each other, and with high minor allele frequencies (MAF $> 0.3$),  ought to be selected first. The calculations assume independence of markers, or absence of LD in the founder population. While low (background) levels of LD are unlikely to interfere with pedigree reconstruction, high levels may give spurious results. Markers with a high MAF provide the most information, as although rare allele provide strong evidence when they are inherited, this does not balance out the rarity of such events.

Creating a subset of SNPs can be done conveniently using PLINK (\url{http://pngu.mgh.harvard.edu/~purcell/plink/}), using for example the command
\vspace{-.3cm}
\begin{verbatim}
plink --file mydata --maf 0.4 --indep 50 5 2
\end{verbatim}
which will create a list of SNPs with a minor allele frequency of at least 0.4, and which in a window of 50 SNPs, sliding by 5 SNPs per step, have a VIF of maximum 2. VIF, or variance inflation factor, is $1/(1-r^2)$. It is advised to `tweak' the parameter values until a set with a few hundred SNPs (300-700) is created. For further details, see \url{http://pngu.mgh.harvard.edu/~purcell/plink/summary.shtml#prune}.

\paragraph{Input file}
The resulting list (`plink.prune.in') can be used to create the genotype file used as input for Sequoia, with SNPs codes as 0, 1, 2, or NA, with the command
\vspace{-.3cm}
\begin{verbatim}
plink --file mydata --extract plink.prune.in --recodeA --out inputfile_for_sequoia
\end{verbatim}
in command prompt, which is (at least on a windows machine) equivalent to
<<eval=FALSE, echo=TRUE>>=
system("cmd", input = "plink --file mydata --extract plink.prune.in --recodeA
       --out inputfile_for_sequoia")
@
in R. This will create a file with the extension .RAW, which can be used as input for Sequoia when specifying \verb+sequoia(GenoFormat = 'raw')+. It will then automatically be converted (duplicated) to a slightly different format, with 1 instead of 6 non-genotype columns, no header row, and -9 instead of NA for missing values. Genotype files which are already in this format, such as simulated genotype files, can be specified as \verb+GenoFormat="seq"+, while those in two-columns-per-SNP format, as used by e.g. Colony, can be specified as \verb+GenoFormat="col"+.


\paragraph{Simulating SNP data}
When SNP data is not (yet) available, but an approximate pedigree is, it is possible to test \verb+sequoia+ on a simulated dataset. This may be useful to for example explore the number of markers required to reliably infer a pedigree of that particular structure. Alternatively, this can be used to estimated the pedigree-wide error rate of an inferred pedigree.

The function \verb+SimGeno()+ lets the user specify the average proportion of missing genotypes per individual, the genotyping error rate, and the fraction of known parents (in the supposed `true' pedigree) which have not been genotyped. Moreover, the data can be made to contain a fraction of low-quality samples, to assess whether inclusion of samples which did not pass stringent quality control would improve or hamper pedigree reconstruction.


\subsection{Preparation}
The program \verb+sequoia+ consists of various sub-programs, which are all called via
<<eval=FALSE, echo=TRUE>>=
sequoia(GenoFile = NULL, GenoFormat="raw", LifeHistFile = NULL,
        Prep = TRUE, CheckDup = TRUE, Parentage = TRUE, Sibships = TRUE)
@
details of the various additional optional parameters can be found using  \verb+?sequoia+, and the sub-programs \verb+Prep+ (prepare), \verb+CheckDup+ (check for duplicates), \verb+Parentage+ and \verb+Sibships+ (sibship clustering and grandparent assignment) are described below.


\paragraph{Setting parameter values}
When the program is called with \verb+Prep = TRUE+, it takes the parameter values supplied, or the default values, and writes those to the file `SequoiaSpecs.txt' in the current working directory, or the specified (sub)directory (option \verb+Dir+). This file is used by the Fortran part of the program, which does all the heavy lifting. Please do not alter the name of this file, or the number of rows in it. Do feel free to change parameter values within this file, provided the number of SNPs or individuals does not exceed the total number of SNPs or individuals in the genotype file.


\paragraph{Check for duplicates}
The data may contain positive controls, as well as other intentional and unintentional duplicated samples, which ought to be removed prior to parentage assignment. Sequoia includes a function to quickly search the data for identical genotypes, called with the option \verb+CheckDup = TRUE+. It allows a few mismatches between the genotypes (depending on the assumed genotyping error rate), with or without the same individual ID. Note that when the number of SNPs is limited, very inbred individuals may be nearly indistinguishable from their parent(s); such individuals should not be excluded.

This function additionally searches the life history file for duplicated entries, and will also print a list of individuals included in the genotype file, but not in the life history file. This latter list is merely a service to the user; individuals without life history information can often be successfully included in the pedigree.


\paragraph{Age based prior}
During preparation the file `AgePriors.txt' is created, which contains 8 columns, and as many rows as the birth year range detected in the life history data input file. It initially only indicates whether a given relationship is biologically possible (1) or not (0) for a given age difference between individuals (\verb+AgePriors = 'flat'+), where the first row is for individuals born in the same year, the second row for individuals born one year apart, etc. The columns are labelled for various relationship categories, with M = mother, P = father, MS = maternal sibling, PS = paternal sibling, MGM = maternal grandmother, PGF = paternal grandfather, MGF = maternal grandfather and paternal grandmother, and AU = avuncular.

For example, the first value in the column 'MS' can be interpreted as `if I were to pick two individuals born in the same year, and two individuals from my sample at random, how much more likely are the first pair to be maternal siblings, compared to the second pair?' Values below 1 indicate less likely, and values above 1 more likely. For MS, PS and AU absolute age differences are used (with overlapping generations, nephews may be older than their aunts), while parents and grandparents are necessarily older than their (grand-)offspring (categories M, P, MGM, PGF and MGF).

These age-difference based priors are by default automatically updated after parentage assignment and prior to sibship clustering, based on the empirical distribution of age differences between individuals and their assigned fathers and mothers. This update can be prevented with the option \verb+Agepriors="old"+, or enforced later with the option \verb+AgePriors="par"+.

As with the parameter specification file, feel free to alter the values in the AgePriors file to match the biological characteristics of the species, but please do not alter the number of columns. The number of rows may be increased (but not decreased below the age range amongst the genotyped individuals according to the provided lifehistory file), in which case the entry `nAgeClasses' in the file `SequoiaSpecs.txt' should be updated to match the new number of rows.

For example, for a species with strictly non-overlapping generations, one may wish to alter the AgePriors to

\begin{tabular}{rrrrrrrr} \small
MS & PS & MGM & PGF & MGF & UA & M & P \\
1 & 1 & 0 & 0 & 0 & 0 & 0 & 0 \\
0 & 0 & 0 & 0 & 0 & 1 & 1 & 1 \\
0 & 0 & 1 & 1 & 1 & 0 & 0 & 0 \\
0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\
0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\
\end{tabular} \\

and express the `birth years' in the lifehistory file as generation numbers. This can be done prior to parentage assignment using
<<eval=FALSE, echo=TRUE>>=
sequoia(GenoFile = "SimGeno.txt", LifeHistFile = "LH_HSg5.txt",
  Prep=TRUE, CheckDup=FALSE, Parentage=FALSE, Sibships = FALSE)
# change AgePriors.txt
sequoia(Prep = FALSE, AgePriors="old", Parentage = TRUE, Sibships = FALSE)
@
Note that any identified parent-offspring pairs which are not a single generation apart will be flagged (see `Non-assigned parent-offspring pairs' below).


\subsection{Parentage assignment}
Parentage assignment is performed with the option \verb+Parentage = TRUE+, which will use the parameter settings in the file `SequoiaSpecs.txt', created by \verb+Prep = TRUE+. Parentage assignment is quick, and takes about 30--40 seconds for a dataset with 2,500 genotyped individuals on a laptop with an intel i7 2.3 GHz CPU and 8GB RAM.

\paragraph{Output}
The assigned parents are written to a text file (by default `Parents\_assigned.txt'), rather than returned within R. This file contains columns with
\begin{itemize}
	\item ID of the individual, its assigned mother and assigned father;
	\item The log10 likelihood ratio (LLR) of the mother, father and the parent pair; this is the ratio between the likelihood of the assigned parent being the parent, versus the most likely alternative type of relative (e.g. full sibling or grandparent) or unrelated, to the focal individual (999.0 = missing value);
	\item The number of loci at which the offspring and the mother or father are opposite homozygotes (-9 = missing value);
	\item The row number in the genotype file of the offspring, mother and father; used when reading in this file for subsequent sibship clustering.
\end{itemize}
Some parents may have a very small or even negative single-parent LLR, but the LLR of the parent pair should always be positive, and is relative to the most likely assignment of a single parent (or no parent). Note that the reported LLR differs from for example Cervus \citep{Marshall98}, which returns the natural log of the ratio between the probability that the assigned parent is the parent, and that the next most likely candidate is the parent.

If some of the LLRs are very large negative or positive numbers, please send a bug report to \url{jisca.huisman@gmail.com} with a short description of your dataset.

\paragraph{Non-assigned parent-offspring pairs}
In addition, the file `Unassigned\_relatives\_par.txt' may be created, which lists identified but non-assigned parent-offspring pairs. These are non-assigned either because it was not possible to tell which of the two was the parent and which was the offspring, due to either or both individuals having an unknown birth year, or because it was not possible to tell whether the candidate parent was the mother or the father. These situations can be remedied by providing estimated birth years or guessed genders in the life history input file for the individuals involved, and re-running \verb+sequoia+. The short computational time of parentage assignment means that this step can be repeated a number of times as a part of data quality control.


 %\begin{figure}[tb]
	%\centering
	%\includegraphics[width=.7\textwidth]{Assignment_diagram}
	%\caption{\footnotesize Overview of the assignments of real or dummy parents and grandparents possible when different types of genotyped relatives are available of a genotyped (grey) or non-genotyped (white) focal individual.}
	%\label{tbl:assignCircle}
%\end{figure}

%\newpage
\subsection{Sibship clustering}
Sibship clustering amongst those individuals which have not been assigned a genotyped parent of both sexes is performed with the option \verb+Sibships = TRUE+, which will again use the parameter settings in the file `SequoiaSpecs.txt'. Sibship clustering is considerably slower than parentage assignment, and may take from a few minutes to a few hours, depending on the number of individuals without a parent, the number of sibships that is being clustered, and their degree of interconnection.

%\paragraph{Number of iterations}
Convergence is typically reached within five iterations, even for complex pedigrees. When convergence is reached before the user-set maximum number of iterations, a final iteration with stronger dependence on the age prior is ran, (dummy)parental likelihoods are calculated, and the algorithm is terminated.

\paragraph{Dummy parents}
To each cluster of half-siblings a ``dummy'' parent is assigned, by default denoted by increasing numbers, with prefix `F' for females and `M' for males. The prefixes can be altered in the `SequoiaSpecs.txt' file, for example to avoid confusion with IDs of real individuals. Dummy individuals are also assigned as the `in-between' individual of identified grandparent --- grand-offspring pairs.



\paragraph{Output}
The output of the sibship clustering is by default written to a text file called `PedSeq.txt', which is highly similar to the output of the parentage assignment. This file does contain all assigned real parents, as well as the dummy parents assigned during sibship clustering. Dummy individuals are appended at the bottom of this pedigree file with their assigned parents, i.e. the sibship's assigned grandparents.

In the file `DummyParents.txt', for each dummy individual its assigned parents are again listed, as well as its sex, its estimated birth year (based on the birth years of its offspring and parents; point estimate, minimum and maximum are provided), the number of assigned offspring, and the IDs of its assigned offspring.


In addition, again a file with non-assigned pairs of relatives may be created, containing for example half-siblings were it could not be determined whether they are maternal or paternal half-siblings; currently no dummy parents of unknown sex are assigned.


\subsection{Comparison with previous pedigree}
Often times, a (part) pedigree is already available to which one wants to compare the results. This pedigree may consist only of maternal links, deduced from observations in the field. The R function \verb+PedCompare()+ performs such comparisons, and takes as only arguments the file names of the `true' pedigree and of the inferred pedigree.

The output consists of two 7x5 matrices, one for dams and one for sires. The columns are defined as follows, where by default Pedigree 1 is the older pedigree, and Pedigree 2 the newly reconstructed pedigree:
\begin{itemize}
	\item Total: The total number of individuals with a parent assigned in either or both pedigrees. When Pedigree 1 is the true pedigree (in case of simulated data), this is the maximum number of matches.
	\item Match: The same parent is assigned in both pedigrees (non-missing). For dummy parents, it is considered a match if the inferred sibship containing the most offspring of a non-genotyped parent, consists for more than half of its offspring.
	\item Mismatch: Different parents assigned in the two pedigrees. When a sibship according to Pedigree 1 is split over two sibships in Pedigree 2, the smaller fraction is included in the count here.
	\item P1\_only: Parent in Pedigree 1 but not 2; includes non-assignable parents such as non-genotyped parents with a single offspring and lacking genotyped grandparents.
	\item P2\_only: Parent in Pedigree 2 but not 1.
\end{itemize}

The rows indicate the various categories, subdivided into:
\begin{itemize}
  \setlength{\itemsep}{0em}
	\item[RR]{Real genotyped individual, real genotyped parent}
	\item[RD]{Real individual, dummy parent (at least 1 genotyped sibling}
	\item[RT]{Real individual, total}
	\item[DR]{Dummy individual, real parent (i.e., real grandparent of sibship)}
	\item[DD]{Dummy individual, dummy parent}
	\item[DT]{Dummy total}
	\item[TT]{Total total, includes all genotyped \& non-genotyped individuals in the pedigree}
\end{itemize}

Potential dummy individuals according to Pedigree 1 are all non-genotyped individuals who have at least two genotyped offspring, or who have one genotyped offspring and a genotyped parent (i.e. who are `inbetween' a grandparent--grandoffspring pair). Note that not all of these will be truly identifiable with Sequoia, for example when the true grandparent is as likely to be full avuncular.

When using the option \verb+MergedPed = TRUE+ additionally a side-by-side comparison of the two pedigrees is returned, plus three columns (id.real, dam.real, sire.real) where dummy IDs in Pedigree 2 are replaced by the most likely non-genotyped individual from Pedigree 1, and 2 columns with paternal categories (Table \ref{tbl:ParentCat}).

\begin{table}
\caption{\footnotesize Parental assignment categories, assuming here error-free assignment in both the provided pedigree 1 and reconstructed pedigree 2. `Replaced' refers to replacing the ID of the dummy parent of an inferred sibship cluster by the ID of the non-genotyped parent of most/all individuals in this sibship.}  \small
\begin{tabular}{ll|ccc}
\hline
Focal & Parent Ped 2 & Parent Ped 1 &  & \\
 &  & Genotyped & Not genotyped & None \\
\hline
Genotyped & Real & P &  & P \\
 & Dummy &  & S & S \\
 & Dummy replaced &  & SR &  \\
 & None &  & O &  \\
\hline
Dummy & Real & G &  & G \\
(Not genotyped, & Dummy &  & A & A \\
not replaced) & Dummy replaced &  & AR &  \\
 & None &  &  &  \\
\hline
Not genotyped & Real & RG &  & RG \\
(was dummy) & Dummy &  & RA & RA \\
 & Dummy replaced &  & RAR &  \\
 & None &  & O &  \\
\hline
\end{tabular}
\label{tbl:ParentCat}
\end{table}

\paragraph{Colony}
To compare Colony output with an existing pedigree, use:
\vspace{-.3cm}
<<eval=FALSE, echo=TRUE>>=
BC <- read.table("Colony/file/file.BestConfig",header=T, sep="", comment.char="")
write.table(BC, "folder/file.BestConfig.txt", row.names=FALSE, sep="\t",
            quote=TRUE)
PedCompare(PedFile1 = "ExistingPedigree.txt",
           PedFile2 = "folder/file.BestConfig.txt")
@


\footnotesize
\bibliography{E:/Articles/References/Pedigree}
\bibliographystyle{plainnat}


%\newgeometry{margin=1.5cm}
%\begin{landscape}
%\include{algorithm_overview}
%\end{landscape}



\end{document}
